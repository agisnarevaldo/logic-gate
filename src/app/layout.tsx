import type { Metadata } from "next";
import { Poppins } from "next/font/google";
import "./globals.css";
import { LayoutProvider } from "@/providers/layout-provider";
import { getServerSession } from "next-auth";
import ClientLayout from "./client-layout";
import { authOptions } from "./api/auth/[...nextauth]/route";
import { ClearCorruptedSession } from "@/components/clear-corrupted-session";

const poppins = Poppins({
  weight: ["300", "400", "500", "600", "700"],
  subsets: ["latin"],
  display: 'swap'
})

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  let session = null;
  
  try {
    session = await getServerSession(authOptions);
  } catch {
    // If there's a JWT error, we'll just continue with null session
    // This allows the app to work while clearing corrupted sessions
    console.log("Session error handled, continuing with null session");
    session = null;
  }
  
  return (
    <html lang="en">
      <body className={`${poppins.className} antialiased`}>
        <ClearCorruptedSession />
        <ClientLayout session={session}>
          <LayoutProvider>
            {children}
          </LayoutProvider>
        </ClientLayout>
      </body>
    </html>
  );
}
